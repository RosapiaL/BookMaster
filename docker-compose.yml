version: "3.8"
services:
  nginx:
    image: nginx:latest
    ports:
      - 3000:80
      - 443:443
    volumes:
      - ./containers/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/nginx/certs
    networks:
      - app
    links:
      - node1:node1
      - node2:node2
      - node3:node3
    depends_on:
      - node1
      - node2
      - node3
  node1:
    build: ./containers/node
    ports:
      - 3001:3000
    container_name: "node1"
    networks:
      - app
      - db
      - rabbit
    environment:
      - NAME_OF_NODE=node1
    env_file:
      - file.env
  node2:
    build: ./containers/node
    ports:
      - 3002:3000
    networks:
      - app
      - db
      - rabbit
    container_name: "node2"
    environment:
      - NAME_OF_NODE=node2
    env_file:
      - file.env
  node3:
    build: ./containers/node
    ports:
      - 3003:3000
    networks:
      - app
      - db
      - rabbit
    container_name: "node3"
    environment:
      - NAME_OF_NODE=node3
    env_file:
      - .env
  couchserver:
    build: "./containers/couchdb"
    restart: always
    container_name: "couch"
    ports:
      - 5984:5984
    env_file:
      - file.env
    networks:
      - db
    volumes:
      - ./containers/couchdb/data:/opt/couchdb/data
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbit
    env_file:
      - file.env
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - rabbit
  nodemailer:
    build: ./containers/mailer
    restart: always
    volumes: 
      - ./containers/mailer:/usr/app
    networks:
      - rabbit
    env_file:
      - file.env

networks:
  app:
  db:
  rabbit: